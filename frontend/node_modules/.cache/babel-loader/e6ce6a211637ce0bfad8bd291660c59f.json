{"ast":null,"code":"var _jsxFileName = \"/home/cnadmin/Desktop/strapi/frontend/src/pages/Category.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORY = gql`\n  query GetCategory($id: ID!){\ncategory(id: $id){\n  data{\n    id\n    attributes{\n      name\n      reviews{\n        data{\n          id\n          attributes{\n            title\n            rating\n            body\n            categories{\n              data{\n                id\n                attributes{\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n}\n`;\nexport default function Category() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(CATEGORY, {\n    variables: {\n      id: id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [data.category.data.attributes.name, \" Games\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), data.category.data.attributes.reviews.data.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating\",\n        children: review.attributes.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: review.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), review.categories.data.map(c => /*#__PURE__*/_jsxDEV(\"small\", {\n        children: c.attributes.name\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [review.attributes.body.substring(0, 200), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/details/${review.id}`,\n        children: \"Read more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, review.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Category, \"ewfendcS3PSa2ath3oPz+m0pI8Y=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/home/cnadmin/Desktop/strapi/frontend/src/pages/Category.js"],"names":["React","useQuery","gql","useParams","Link","CATEGORY","Category","id","loading","error","data","variables","console","log","category","attributes","name","reviews","map","review","rating","title","categories","c","body","substring"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;;AAEA,MAAMC,QAAQ,GAAEH,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;AA+BA,eAAe,SAASI,QAAT,GAAoB;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACI,QAAD,EAAW;AAClDM,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAEA;AAAN;AADuC,GAAX,CAAzC;AAIA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEXG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,sBACE;AAAA,4BACE;AAAA,iBAAMA,IAAI,CAACI,QAAL,CAAcJ,IAAd,CAAmBK,UAAnB,CAA8BC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,IAAI,CAACI,QAAL,CAAcJ,IAAd,CAAmBK,UAAnB,CAA8BE,OAA9B,CAAsCP,IAAtC,CAA2CQ,GAA3C,CAA+CC,MAAM,iBACpD;AAAqB,MAAA,SAAS,EAAC,aAA/B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBA,MAAM,CAACJ,UAAP,CAAkBK;AAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,EAIGF,MAAM,CAACG,UAAP,CAAkBZ,IAAlB,CAAuBQ,GAAvB,CAA2BK,CAAC,iBAC3B;AAAA,kBAAmBA,CAAC,CAACR,UAAF,CAAaC;AAAhC,SAAYO,CAAC,CAAChB,EAAd;AAAA;AAAA;AAAA;AAAA,cADD,CAJH,eAQE;AAAA,mBAAIY,MAAM,CAACJ,UAAP,CAAkBS,IAAlB,CAAuBC,SAAvB,CAAiC,CAAjC,EAAoC,GAApC,CAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,YAAWN,MAAM,CAACZ,EAAG,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,OAAUY,MAAM,CAACZ,EAAjB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA7BuBD,Q;UACPH,S,EACkBF,Q;;;KAFXK,Q","sourcesContent":["import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport { useParams, Link } from 'react-router-dom'\n\nconst CATEGORY= gql`\n  query GetCategory($id: ID!){\ncategory(id: $id){\n  data{\n    id\n    attributes{\n      name\n      reviews{\n        data{\n          id\n          attributes{\n            title\n            rating\n            body\n            categories{\n              data{\n                id\n                attributes{\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n}\n`\n\nexport default function Category() {\n  const { id } = useParams()\n  const { loading, error, data } = useQuery(CATEGORY, {\n    variables: { id: id }\n  })\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  console.log(data)\n\n  return (\n    <div>\n      <h2>{ data.category.data.attributes.name } Games</h2>\n      {data.category.data.attributes.reviews.data.map(review => (\n        <div key={review.id} className=\"review-card\">\n          <div className=\"rating\">{review.attributes.rating}</div>\n          <h2>{review.title}</h2>\n\n          {review.categories.data.map(c => (\n            <small key={c.id}>{c.attributes.name}</small>\n          ))}\n          \n          <p>{review.attributes.body.substring(0, 200)}...</p>\n          <Link to={`/details/${review.id}`}>Read more</Link>\n        </div>\n      ))}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}