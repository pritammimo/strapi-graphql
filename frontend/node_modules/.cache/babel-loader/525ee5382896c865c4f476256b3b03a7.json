{"ast":null,"code":"var _jsxFileName = \"/home/cnadmin/Desktop/strapi/frontend/src/pages/Homepage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REVIEWS = gql`\n  query GetReviews {\n    reviews{\n    data{\n      id\n      attributes{\n        title\n        body\n        rating\n      }\n    }\n  }\n  }\n`;\nexport default function Homepage() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(REVIEWS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.data.reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating\",\n        children: review.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: review.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"console list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [review.body.substring(0, 200), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/details/${review.id}`,\n        children: \"Read more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, review.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Homepage, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/home/cnadmin/Desktop/strapi/frontend/src/pages/Homepage.js"],"names":["React","Link","useQuery","gql","REVIEWS","Homepage","loading","error","data","console","log","reviews","map","review","rating","title","body","substring","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,MAAMC,OAAO,GAAGD,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,eAAe,SAASE,QAAT,GAAoB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,OAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,sBACE;AAAA,cACGA,IAAI,CAACA,IAAL,CAAUG,OAAV,CAAkBC,GAAlB,CAAsBC,MAAM,iBAC3B;AAAqB,MAAA,SAAS,EAAC,aAA/B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBA,MAAM,CAACC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AAAA,mBAAIF,MAAM,CAACG,IAAP,CAAYC,SAAZ,CAAsB,CAAtB,EAAyB,GAAzB,CAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,YAAWJ,MAAM,CAACK,EAAG,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OAAUL,MAAM,CAACK,EAAjB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvBuBb,Q;UACWH,Q;;;KADXG,Q","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useQuery, gql } from '@apollo/client'\n\nconst REVIEWS = gql`\n  query GetReviews {\n    reviews{\n    data{\n      id\n      attributes{\n        title\n        body\n        rating\n      }\n    }\n  }\n  }\n`\n\nexport default function Homepage() {\n  const { loading, error, data } = useQuery(REVIEWS)\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  console.log(data)\n\n  return (\n    <div>\n      {data.data.reviews.map(review => (\n        <div key={review.id} className=\"review-card\">\n          <div className=\"rating\">{review.rating}</div>\n          <h2>{review.title}</h2>\n          \n          <small>console list</small>\n\n          <p>{review.body.substring(0, 200)}...</p>\n          <Link to={`/details/${review.id}`}>Read more</Link>\n        </div>\n      ))}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}