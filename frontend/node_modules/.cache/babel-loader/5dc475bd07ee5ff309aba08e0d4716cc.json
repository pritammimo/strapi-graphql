{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const res = await fetch(url);\n        const json = await res.json();\n        setData(json);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    loading,\n    error,\n    data\n  };\n};\n\n_s(useFetch, \"cdnblwmK9QuMyYTkxGRQb1PLKRw=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/cnadmin/Desktop/strapi/frontend/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","data","setData","error","setError","loading","setLoading","fetchData","res","fetch","json"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAG,YAAY;AAC5BD,MAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,UAAI;AACF,cAAME,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAD,CAAvB;AACA,cAAMU,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AAEAR,QAAAA,OAAO,CAACQ,IAAD,CAAP;AACAJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAND,CAME,OAAOH,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAbD;;AAeAC,IAAAA,SAAS;AACV,GAjBQ,EAiBN,CAACP,GAAD,CAjBM,CAAT;AAmBA,SAAO;AAAEK,IAAAA,OAAF;AAAWF,IAAAA,KAAX;AAAkBF,IAAAA;AAAlB,GAAP;AACD,CAzBD;;GAAMF,Q;;AA2BN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\"\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true)\n      \n      try {\n        const res = await fetch(url)\n        const json = await res.json()\n\n        setData(json);\n        setLoading(false)\n      } catch (error) {\n        setError(error)\n        setLoading(false)\n      }\n    }\n\n    fetchData();\n  }, [url])\n\n  return { loading, error, data }\n}\n\nexport default useFetch"]},"metadata":{},"sourceType":"module"}